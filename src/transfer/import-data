#!/usr/bin/env bash

# Running as root?

if [[ "$(whoami)" != 'root' ]]; then
  echo 'Please run w/ `sudo`.'; exit 1; fi;

# Include strict mode & functions.

. /bootstrap/src/bash/strict-mode;
. /bootstrap/src/bash/functions;

# Installation must have completed already.

if [[ ! -f /bootstrap/.installed-version ]]; then
  echo 'Installation incomplete. Not yet possible.';
  exit 1; # Failure status.
fi;
# Must have a URL pointing to import data.

url="${1:-}"; # Initialize.

if [[ -z "${url}" ]]; then
  echo 'Expecting input URL w/ import data.';
  exit 1; # Hard failure.
fi;
# Download & import the remote data.

cd /; # Move to drive base.

curl "${url}" --location --output /tmp/exported-data.tar.gz.gpg;

gpg2 --decrypt --output /tmp/exported-data.tar.gz \
   /tmp/exported-data.tar.gz.gpg;

tar \
  --verbose \
  --extract --gzip \
  --absolute-names \
  --preserve-permissions \
  --overwrite --recursive-unlink \
  --file=/tmp/exported-data.tar.gz;

if [[ -f /tmp/exported-data.sql ]] && can-run mysql; then
  mysql --user=root --password="${CFG_MYSQL_DB_PASSWORD}" < /tmp/exported-data.sql;
fi;
rm --force /tmp/exported-data.*; # Cleanup temporary files.
