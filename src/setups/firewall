#!/usr/bin/env bash

if [[ "${CFG_INSTALL_FIREWALL}" == 1 ]]; then

  # Install.

  apt-get install ufw --yes;

  # Default config.

  ufw default deny incoming;
  ufw default allow outgoing;

  # Allow SSH access for admins.

  if is-vm; then
    ufw allow 22/tcp; # No firewall limitations on a VM.
  elif [[ "${CFG_FIREWALL_ALLOWS_ADMIN_ONLY_VIA_22}" == 1 && -n "${CFG_ADMIN_STATIC_IP_ADDRESS}" ]]; then
      ufw limit from "${CFG_ADMIN_STATIC_IP_ADDRESS}" to any port 22 proto tcp;
      # limit = max of 6 connections every 30 seconds.
      # See: `/lib/ufw/user.rules` for details.
  else ufw limit 22/tcp; fi; # SSH, SFTP, Git, etc.

  # Open the VPN port if installing OpenVPN.
  # See: <http://jas.xyz/2cuqxDM>

  if [[ "${CFG_INSTALL_OPENVPN}" == 1 ]]; then
    ufw limit 1194/udp; # OpenVPN service.
    # limit = max of 6 connections every 30 seconds.
    # See: `/lib/ufw/user.rules` for details.

    echo '1' > /proc/sys/net/ipv4/ip_forward;
    echo 'net.ipv4.ip_forward = 1' >> /etc/sysctl.conf;

    if is-do && do-has-floating-ip; then # A floating IP is better.

      perl -i -0wpe 's/\nCOMMIT\s*$//u' /etc/ufw/before.rules;
      perl -i -0wpe 's/\n#.+$//u' /etc/ufw/before.rules;

      echo $'\n''# FWD for OpenVPN' >> /etc/ufw/before.rules;
      echo '-A ufw-before-forward -m state --state RELATED,ESTABLISHED -j ACCEPT' >> /etc/ufw/before.rules;
      echo '-A ufw-before-forward -s 10.8.0.0/24 -o '"$(default-interface)"' -j ACCEPT' >> /etc/ufw/before.rules;
      echo '-A ufw-before-forward -j REJECT' >> /etc/ufw/before.rules;
      echo $'\n''COMMIT' >> /etc/ufw/before.rules;

      echo $'\n''# NAT for OpenVPN' >> /etc/ufw/before.rules;
      echo '*nat' >> /etc/ufw/before.rules;
      echo ':POSTROUTING ACCEPT [0:0]' >> /etc/ufw/before.rules;
      echo '-A POSTROUTING -s 10.8.0.0/24 -o '"$(default-interface)"' -j SNAT --to-source '"$(do-anchor-ip)" >> /etc/ufw/before.rules;
      echo 'COMMIT' >> /etc/ufw/before.rules;

    else # Default case handler; i.e., no special considerations.
      perl -i -wpe 's/^(\s*)#?DEFAULT_FORWARD_POLICY\s*\=.*$/$1DEFAULT_FORWARD_POLICY="ACCEPT"/u' /etc/default/ufw;

      echo '# NAT for OpenVPN' >> /etc/ufw/before.rules;
      echo '*nat' >> /etc/ufw/before.rules;
      echo ':POSTROUTING ACCEPT [0:0]' >> /etc/ufw/before.rules;
      echo '-A POSTROUTING -s 10.8.0.0/24 -o '"$(default-interface)"' -j MASQUERADE' >> /etc/ufw/before.rules;
      echo 'COMMIT' >> /etc/ufw/before.rules;
    fi;
  fi;

  # Open MySQL port 3306 to all VPN connections?

  if can-run mysql; then
    if [[ "${CFG_FIREWALL_ALLOWS_MYSQL_VIA_3306}" == 1 ]]; then
      ufw allow 3306/tcp; # Allow external connections.
    fi;
    if [[ "${CFG_FIREWALL_ALLOWS_MYSQL_INSIDE_VPN}" == 1 ]]; then
      if is-vm; then # On a VM this has a slightly different meaning.
        ufw allow 3306/tcp; # Wide open on a VM.
      elif is-do; then # Private network interface.
        ufw allow in on eth1 to any port 3306 proto tcp;
      fi;
    fi;
  fi;

  # Open up the HTTP/HTTPS port numbers `80` and `443`?

  if can-run nginx || can-run apache2 || [[ -d /discourse ]]; then
    if [[ "${CFG_FIREWALL_ALLOWS_CF_ONLY_VIA_80_443}" == 1 ]]; then
      # See: <https://www.cloudflare.com/ips/>
      _ips_v4="$(curl https://www.cloudflare.com/ips-v4 --location)";
      _ips_v6="$(curl https://www.cloudflare.com/ips-v6 --location)";

      while read -ra _ip; do
        _ip="$(trim "${_ip}")";
        if [[ -n "${_ip}" ]]; then
          sudo ufw allow from "${_ip}" to any port 80 proto tcp;
          sudo ufw allow from "${_ip}" to any port 443 proto tcp;
        fi;
      done <<< "${_ips_v4}"$'\n'"${_ips_v6}"; unset _ips_v4; unset _ips_v6; unset _ip;

    else # Wide open w/o any DDoS protection whatsoever.
      ufw allow 80/tcp; ufw allow 443/tcp;
    fi;
  fi;

  # Open up the HTTP/HTTPS port number `8025` for MailHog.

  if is-vm && [[ "${CFG_INSTALL_MAILHOG}" == 1 ]]; then
    ufw allow 8025/tcp; # Requires `http://`.
  fi; # MailHog does not support HTTPS at this time.

  # Enable automatic startup.

  systemctl enable ufw;

  # Restart service.

  ufw --force enable;
  service ufw restart;

else echo 'Skipping firewall installation.'; fi;
