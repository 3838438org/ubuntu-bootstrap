#!/usr/bin/env bash

if [[ "${CFG_INSTALL_NGINX}" == 1 ]]; then

  # Install Ngnix web server.

  apt-add-repository ppa:nginx/development --yes;
  apt-get update; # Update after adding repo.
  apt-get install nginx-extras --yes;

  # Config Ngnix web server.

  rm --force /etc/nginx/nginx.conf;
  mv /etc/nginx/modules-enabled/* /etc/nginx/modules-available/;
  mv /etc/nginx/sites-enabled/* /etc/nginx/sites-available/;

  mkdir --parents /etc/nginx/conf.d/main;
  mkdir --parents /etc/nginx/conf.d/http;
  mkdir --parents /etc/nginx/conf.d/server;
  mkdir --parents /var/nginx/proxy-cache;

  ln --symbolic /bootstrap/src/nginx/.conf /etc/nginx/nginx.conf;
  cat /etc/nginx/~env.conf >> /etc/nginx/env.conf; rm /etc/nginx/~env.conf;

  mv /etc/nginx/modules-available/50-mod-http-headers-more-filter.conf \
    /etc/nginx/modules-enabled/50-mod-http-headers-more-filter.conf;

  ln --symbolic /bootstrap/src/nginx/conf.d/main/_defaults.conf /etc/nginx/conf.d/main/_defaults.conf;
  ln --symbolic /bootstrap/src/nginx/conf.d/http/_defaults.conf /etc/nginx/conf.d/http/_defaults.conf;
  ln --symbolic /bootstrap/src/nginx/conf.d/server/_defaults.conf /etc/nginx/conf.d/server/_defaults.conf;

  if is-vm; then # Disable sendfile on VMs.
    perl -i -wpe 's/^(\s*)sendfile\s+.*$/$1sendfile off;/u' /bootstrap/src/nginx/snippets/http/_defaults/general.conf;
  fi; # See: <https://docs.vagrantup.com/v2/synced-folders/virtualbox.html>

  # Maybe proxy WordPress dev containers.

  if [[ "${CFG_INSTALL_WORDPRESS_DEV_CONTAINERS}" == 1 ]]; then
    ln --symbolic /bootstrap/src/nginx/conf.d/http/proxy-wp-dev.conf /etc/nginx/conf.d/http/proxy-wp-dev.conf;
  fi; # This exposes the containers through Nginx for easier access and more effective testing.

  # Set up CloudFlare real IP forwarding.

  _ips_v4="$(get-cloudflare-ips-v4)";
  _ips_v6="$(get-cloudflare-ips-v6)";

  : > /bootstrap/src/nginx/conf.d/server/cf-real-ip.conf;
  echo '# Cloudflare real IP.' >> /bootstrap/src/nginx/conf.d/server/cf-real-ip.conf;
  echo '# Filled by Nginx installer.' >> /bootstrap/src/nginx/conf.d/server/cf-real-ip.conf;
  echo '# Uses the latest IP addresses.' >> /bootstrap/src/nginx/conf.d/server/cf-real-ip.conf;
  echo $'\n' >> /bootstrap/src/nginx/conf.d/server/cf-real-ip.conf;

  while read -ra _ip; do
    _ip="$(trim "${_ip}")";
    if [[ -n "${_ip}" ]]; then
      echo 'set_real_ip_from '"${_ip}"';' >> /bootstrap/src/nginx/conf.d/server/cf-real-ip.conf;
    fi;
  done <<< "${_ips_v4}"$'\n'"${_ips_v6}"; unset _ips_v4; unset _ips_v6; unset _ip;

  echo 'real_ip_header cf-connecting-ip;' >> /bootstrap/src/nginx/conf.d/server/cf-real-ip.conf;

  if [[ "${CFG_FIREWALL_ALLOWS_CF_ONLY_VIA_80_443}" == 1 ]]; then
    ln --symbolic /bootstrap/src/nginx/conf.d/server/cf-real-ip.conf /etc/nginx/conf.d/server/cf-real-ip.conf;
  fi;

  # Bug fix. See: <http://jas.xyz/2co3WYm>

  mkdir --parents /etc/systemd/system/nginx.service.d;
  echo '[Service]' >> /etc/systemd/system/nginx.service.d/override.conf;
  echo 'ExecStartPost=/bin/sleep 0.1' >> /etc/systemd/system/nginx.service.d/override.conf;
  systemctl daemon-reload; # Restart systemd.

  # Enable automatic startup.

  systemctl enable nginx;

  # Maybe create an RUnit startup script.

  maybe-add-runit-service nginx;

  # Put live sites into maintenance mode.

  if ! is-vm && ! is-dev; then
    touch /app/.maintenance; fi;

  # Restart service.

  service nginx restart;

else echo 'Skipping Nginx installation.'; fi;
