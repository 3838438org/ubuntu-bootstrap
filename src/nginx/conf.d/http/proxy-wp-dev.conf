# PHP version-specific locations.

server {
    server_name ~(?:^|[.\-])php(?<php_v>[1-9][0-9])(?:[.\-]|$);

    # HTTP (port 80).

    listen 80;
    listen [::]:80;

    # Security checks apply.

    include /bootstrap/src/nginx/snippets/server/_defaults/security-checks.conf;

    # Administrative tools.

    location ^~ /---tools/ {
      auth_basic 'Administrative Tools';
      auth_basic_user_file /etc/bootstrap/passwds/.tools;

      gzip off;
      etag off;
      expires off;
      if_modified_since off;
      more_clear_headers 'content-type';

      add_header x-foo ''; # Clear any existing `add_header` calls.
      # Headers set by `add_header` apply only if there are no calls to `add_header` in this layer.
      # So this simple call to `add_header` (where `x-foo` is meaningless) prevents layered headers.

      proxy_set_header host $host;
      proxy_set_header x-real-ip $remote_addr;
      proxy_set_header x-forwarded-proto $scheme;
      proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;

      proxy_pass http://127.0.0.1:80$php_v;
    }

    # Proxy for this dev container.

    location / {
        gzip off;
        etag off;
        expires off;
        if_modified_since off;
        more_clear_headers 'content-type';

        add_header x-foo ''; # Clear any existing `add_header` calls.
        # Headers set by `add_header` apply only if there are no calls to `add_header` in this layer.
        # So this simple call to `add_header` (where `x-foo` is meaningless) prevents layered headers.

        proxy_set_header host $host;
        proxy_set_header x-real-ip $remote_addr;
        proxy_set_header x-forwarded-proto $scheme;
        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;

        proxy_pass http://127.0.0.1:80$php_v;
    }
}
