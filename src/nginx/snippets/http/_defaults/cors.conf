# Is this a CORS request?

map $host::$http_origin $_is_cors {
  ~*^(?:io|api)\..*?\:\:. yes;
}
map $_is_cors:$request_method $_is_cors_pfc {
  yes:OPTIONS yes; # Pre-flight check.
}

# Establish CORS security policies.

map $uri $_cors_allow_origin_exts {
  ~*\.(?:otf|ttf|woff|woff2|eot)$ *;
}
map $_is_cors $_cors_allow_origin {
  default $_cors_allow_origin_exts;
  yes $http_origin; # Overrides `*`.
}
map $_is_cors $_cors_allow_credentials {
  yes true; # Enable auth & cookies.
}
map $_is_cors $_cors_allow_methods {
  yes 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
}
map $_is_cors $_cors_allow_headers {
  yes 'upgrade-insecure-requests,keep-alive, dnt,user-agent,x-requested-with,x-requested-by, cf-ray,cf-connecting-ip,cf-visitor,cf-ipcountry,true-client-ip,x-cluster-client-ip,x-client-ip,client-ip,x-real-ip,real-ip,  ,x-forwarded-proto,x-forwarded-for,forwarded-for,x-forwarded,forwarded,via, authorization,proxy-authorization, range,if-range, accept,te,accept-encoding,accept-language, if-modified-since,cache-control, content-encoding,content-length,content-type, idempotency-key';
}
map $_is_cors $_cors_expose_headers {
  yes 'server,x-powered-by,cf-ray,via, allow,content-security-policy-report-only,content-security-policy,x-webkit-csp,x-frame-options,referrer-policy,p3p, strict-transport-security,public-key-pins, connection,upgrade, location,refresh, status,retry-after, link,x-ua-compatible, www-authenticate,proxy-authenticate, accept-ranges,content-range, transfer-encoding,trailer, content-disposition,content-encoding,content-language,content-location,content-length,content-type,x-content-type-options, cache-control,date,age,last-modified,expires,warning,etag,pragma,vary';
}

# Add CORS-related headers now.

add_header vary origin always; # Vary on `origin:`.
add_header access-control-allow-origin $_cors_allow_origin always;
add_header access-control-allow-credentials $_cors_allow_credentials always;
add_header access-control-allow-methods $_cors_allow_methods always;
add_header access-control-allow-headers $_cors_allow_headers always;
add_header access-control-expose-headers $_cors_expose_headers always;
