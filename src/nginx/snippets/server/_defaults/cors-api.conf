# CORS for `cors|api.` hosts.

if ($host ~* ^(?:cors|api)\.) {
  add_header vary origin;

  $_access_control_allow_methods = 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
  $_access_control_allow_headers = 'upgrade-insecure-requests, accept,accept-encoding,accept-language, x-client,user-agent,x-requested-with,via, authorization,proxy-authorization, range,if-range, if-modified-since,cache-control, content-encoding,content-type,content-length, keep-alive, dnt';
  $_access_control_expose_headers = 'server,cf-ray,via, allow, content-security-policy,x-webkit-csp,x-frame-options, strict-transport-security,public-key-pins, referrer-policy, upgrade,location,refresh, status,retry-after, link,x-powered-by,p3p, www-authenticate,proxy-authenticate, accept-ranges,content-range, transfer-encoding,trailer, content-disposition,content-encoding,content-language,content-type,x-content-type-options,content-length, cache-control,last-modified,date,expires,warning,etag,pragma,vary';

  add_header access-control-allow-origin $http_origin always;
  add_header access-control-allow-methods $_access_control_allow_methods always;

  add_header access-control-allow-credentials true always;
  add_header access-control-allow-headers $_access_control_allow_headers always;
  add_header access-control-expose-headers $_access_control_expose_headers always;

  if ($request_method = OPTIONS) {
    add_header access-control-max-age 86400;
    add_header content-type 'text/plain; charset=utf-8';
    add_header content-length 0;
    return 204;
  }
}
