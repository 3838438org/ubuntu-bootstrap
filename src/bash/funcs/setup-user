#!/usr/bin/env bash

# User setup/configuration utility.

function setup-user() {
  local user="${1:-}";
  local name="${2:-}";
  local email="${3:-}";
  local shell="${4:-}";
  local ssh_keys="${5:-}";

  ## Validation.

  if [[ -z "${user}" ]]; then
    return 1; fi; # Missing.

  if ! user-exists "${user}"; then
    return 1; fi; # Missing.

  ## Determine home directory.

  if [[ "${user}" == root ]]; then
    local home_dir=/root; # Special case.
  else local home_dir=/home/"${user}"; fi;

  if [[ ! -d "${home_dir}" ]]; then
    return 1; fi; # Missing home dir.

  ## Set the login shell they prefer to use.

  if [[ -n "${shell}" ]]; then
    chsh --shell "${shell}" "${user}"; fi;

  ## Home directory customization.

  cp --force --recursive --preserve=mode /bootstrap/src/tpl.home/. "${home_dir}";
  chown --recursive "${user}":"${user}" "${home_dir}";

  ## Setup authorized SSH keys in home directory.

  if [[ -f "${ssh_keys}" ]]; then
    mkdir --parents "${home_dir}"/.ssh;
    cp --force "${ssh_keys}" "${home_dir}"/.ssh/authorized_keys;

    chmod 700 "${home_dir}"/.ssh;
    chmod 600 "${home_dir}"/.ssh/authorized_keys;
    chown --recursive "${user}":"${user}" "${home_dir}"/.ssh;
  fi;
  ## Git configuration for this user.

  perl -i -wpe 's/^(\s*)name\s*\=.*$/$1name = '"$(esc-regex-rv "${name}")"'/uim' "${home_dir}"/.gitconfig;
  perl -i -wpe 's/^(\s*)email\s*\=.*$/$1email = '"$(esc-regex-rv "${email}")"'/uim' "${home_dir}"/.gitconfig;
};
