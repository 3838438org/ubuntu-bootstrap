#!/usr/bin/env bash

# Include strict mode & functions.

. /bootstrap/src/bash/strict-mode;
. /bootstrap/src/bash/functions;

set -o xtrace; # Print each command that is run.

# Disable web servers & firewall temporarily.

function disable_web_servers_and_firewall() {
  can-run ufw && service ufw stop &>/dev/null;
  can-run nginx && service nginx stop &>/dev/null;
  can-run apache2 && service apache2 stop &>/dev/null;
  return 0; # In case last test fails.
};
# Restore web servers & firewall (i.e., enable).

function restore_web_servers_and_firewall() {
  can-run ufw && service ufw start &>/dev/null;
  can-run nginx && service nginx start &>/dev/null;
  can-run apache2 && service apache2 start &>/dev/null;
  return 0; # In case last test fails.
};
# Trap errors and recover gracefully.

function auto_restore_web_servers_and_firewall_on_error() {
  restore_web_servers_and_firewall; stack-trace "$@";
}; trap auto_restore_web_servers_and_firewall_on_error ERR;

# Acquire and/or renew official SSL certificates.

# Things to be aware of when it comes to LetsEncrypt:
# - Depends on global environment variables defined for this server.
# - ${CFG_HOST} & ${CFG_OTHER_HOSTS} must be resolvable; i.e., DNS must be ready.
# - Other web servers must be disabled while this runs; i.e., disable Apache/Nginx.
# - The firewall must allow LetsEncrypt to access port 443 for domain validation.
# - Does NOT support wildcard certificates whatsoever at this time.
# - Maximum of 100 domains in a single SANS certificate.

_domains_list="${CFG_HOST}";
_domains_list+=' '"${CFG_OTHER_HOSTS}";
domains=''; # Comma-delimited domains.

for _domain in $_domains_list; do
  _domain="$(trim "${_domain}")";

  if [[ -z "${_domain}" ]]; then
    continue; fi; # Empty.

  domains+=','"${_domain}";

  if [[ "${_domain}" =~ ^www\. ]]; then
    domains+="${_domain/#www./}";
  elif [[ "$(dot-count "${_domain}")" == 1 ]]; then
    domains+=',www.'"${_domain}";
  fi;
done; unset _domains_list; unset _domain;

domains="${domains/#,/}"; # Strip leading comma.

disable_web_servers_and_firewall; # Temporarily.

/usr/local/src/letsencrypt/letsencrypt-auto certonly --standalone \
  --standalone-supported-challenges tls-sni-01 \
  --email="${CFG_ADMIN_EMAIL}" \
  --domains="${domains}" \
  --keep-until-expiring \
  --rsa-key-size 2048 \
  --renew-by-default \
  --agree-tos;

# Note that all of the domains are recorded in a single SANS certificate.
# The first domain in the list is the name of the directory where the certificates live.
# See: <http://jas.xyz/1Mz5nux> for confirmation of this behavior.

ln --symbolic --force /etc/letsencrypt/live/"${CFG_HOST}"/privkey.pem /etc/bootstrap/ssl/official-private-key.pem;
ln --symbolic --force /etc/letsencrypt/live/"${CFG_HOST}"/cert.pem /etc/bootstrap/ssl/official-crt.pem;
ln --symbolic --force /etc/letsencrypt/live/"${CFG_HOST}"/chain.pem /etc/bootstrap/ssl/official-chain.pem;
ln --symbolic --force /etc/letsencrypt/live/"${CFG_HOST}"/fullchain.pem /etc/bootstrap/ssl/official-fullchain.pem;

# Restore web servers & firewall (i.e., enable).

restore_web_servers_and_firewall; # Full restoration now.
